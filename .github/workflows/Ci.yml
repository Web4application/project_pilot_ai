name: ProjectPilotAI CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # 1. Python backend checks
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 black
      - name: Lint with flake8
        run: flake8 ai_core cli integrations
      - name: Format check with black
        run: black --check ai_core cli integrations
      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

  # 2. Node.js (VSCode extension, GUI, SDK)
  node-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install deps
        run: |
          cd gui || cd vscode-plugin || true
          npm install
      - name: Lint
        run: |
          cd gui || cd vscode-plugin || true
          npm run lint --if-present
      - name: Run tests
        run: |
          cd gui || cd vscode-plugin || true
          npm test --if-present

  # 3. Build Docker image
  docker-build:
    runs-on: ubuntu-latest
    needs: [python-tests, node-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/project_pilot_ai
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  # 4. PR AI Reviewer (example)
  pr-ai-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run AI PR Review
        run: |
          echo "This step would call your AI review bot"
          # Example: python integrations/pr_reviewer.py $GITHUB_EVENT_PATH
